{
  "version": 3,
  "sources": ["../js/aura-chatbot.js"],
  "sourcesContent": ["/**\n * Aura Product Chatbot - Frontend (ES module)\n * Built for modern toolchains (ESM) and progressive enhancement.\n *\n * - Use a bundler (esbuild/rollup/webpack) to produce a WordPress-compatible bundle\n *   (iife/umd) if you need to support older browsers without modules.\n * - WordPress should localize script data to `window.AURA_CHATBOT_CONFIG`\n *   with { restUrl, nonce, i18n } before enqueuing.\n *\n * Exported API:\n *   init(container: HTMLElement, options?: object)\n *\n * Accessibility:\n *   - aria-live region for messages\n *   - keyboard support for input and open/close\n *\n * Example usage (after bundling or using as module):\n *   import AuraChatbot from './aura-chatbot.js';\n *   AuraChatbot.init(document.querySelector('#aura-chat'));\n */\n\nconst DEFAULT_OPTIONS = {\n  restUrl: '',\n  nonce: '',\n  selectors: {\n    form: '[data-aura-form]',\n    input: '[data-aura-input]',\n    submit: '[data-aura-submit]',\n    messages: '[data-aura-messages]',\n    openBtn: '[data-aura-open]',\n    closeBtn: '[data-aura-close]',\n    typingIndicator: '[data-aura-typing]',\n  },\n  i18n: {\n    sending: 'Sending\u2026',\n    error: 'An error occurred. Please try again.',\n    placeholder: 'Ask about this product...',\n  },\n  requestTimeout: 30000,\n};\n\nfunction createEl(tag, attrs = {}, text = '') {\n  const el = document.createElement(tag);\n  Object.entries(attrs).forEach(([k, v]) => {\n    if (k === 'class') el.className = v;\n    else if (k === 'type' || k === 'placeholder' || k === 'value') el.setAttribute(k, v);\n    else if (k.startsWith('aria')) el.setAttribute(k, v);\n    else if (k.startsWith('data-')) el.setAttribute(k, v);\n  });\n  if (text) el.textContent = text;\n  return el;\n}\n\nfunction timeoutFetch(resource, options = {}, ms = 30000) {\n  const controller = new AbortController();\n  const id = setTimeout(() => controller.abort(), ms);\n  const signal = controller.signal;\n  return fetch(resource, { ...options, signal })\n    .finally(() => clearTimeout(id));\n}\n\nfunction safeText(s) {\n  const div = document.createElement('div');\n  div.textContent = s;\n  return div.innerHTML;\n}\n\nconst AuraChatbot = (function () {\n  let config = { ...DEFAULT_OPTIONS };\n  let state = {\n    container: null,\n    elements: {},\n  };\n\n  function applyConfig(local) {\n    config = deepMerge(config, local || {});\n  }\n\n  function deepMerge(a, b) {\n    if (!b) return a;\n    const out = { ...a };\n    Object.keys(b).forEach((k) => {\n      if (isObject(b[k]) && isObject(a[k])) out[k] = deepMerge(a[k], b[k]);\n      else out[k] = b[k];\n    });\n    return out;\n  }\n\n  function isObject(x) {\n    return x && typeof x === 'object' && !Array.isArray(x);\n  }\n\n  function renderMessage(container, message, type = 'bot') {\n    const item = createEl('div', { class: `aura-msg aura-msg--${type}`, role: 'article' });\n    const body = createEl('div', { class: 'aura-msg__body' });\n    body.innerHTML = safeText(message);\n    item.appendChild(body);\n    container.appendChild(item);\n    // Keep the latest message in view\n    container.scrollTop = container.scrollHeight;\n  }\n\n  function showTyping(el, show = true) {\n    if (!el) return;\n    el.style.display = show ? '' : 'none';\n  }\n\n  async function sendMessage(payload) {\n    const url = config.restUrl;\n    if (!url) throw new Error('Missing restUrl in configuration');\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n    if (config.nonce) headers['X-WP-Nonce'] = config.nonce;\n\n    const res = await timeoutFetch(url, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(payload),\n    }, config.requestTimeout);\n\n    if (!res.ok) {\n      const text = await res.text().catch(() => '');\n      throw new Error(`Network error ${res.status}: ${text}`);\n    }\n    return res.json();\n  }\n\n  function attachEvents() {\n    const { form, input, submit, messages, typingIndicator, openBtn, closeBtn } = state.elements;\n\n    if (!form) return;\n\n    form.addEventListener('submit', async (ev) => {\n      ev.preventDefault();\n      const value = input.value.trim();\n      if (!value) return;\n      const userMsg = value;\n      input.value = '';\n      renderMessage(messages, userMsg, 'user');\n      showTyping(typingIndicator, true);\n\n      try {\n        const response = await sendMessage({ prompt: userMsg, context: getContext() });\n        showTyping(typingIndicator, false);\n        if (response && response.reply) {\n          renderMessage(messages, response.reply, 'bot');\n        } else {\n          renderMessage(messages, config.i18n.error, 'error');\n        }\n      } catch (err) {\n        showTyping(typingIndicator, false);\n        renderMessage(messages, config.i18n.error, 'error');\n        console.error(err);\n      }\n    });\n\n    // Accessibility: submit on Enter, allow Shift+Enter for newline\n    if (input) {\n      input.addEventListener('keydown', (ev) => {\n        if (ev.key === 'Enter' && !ev.shiftKey) {\n          ev.preventDefault();\n          if (submit) submit.click();\n        }\n      });\n    }\n\n    if (openBtn) openBtn.addEventListener('click', () => state.container.classList.add('aura--open'));\n    if (closeBtn) closeBtn.addEventListener('click', () => state.container.classList.remove('aura--open'));\n  }\n\n  function getContext() {\n    // Lightweight context passed to the API: page/product metadata from data attributes\n    const ctx = {};\n    const el = state.container;\n    if (!el) return ctx;\n    Array.from(el.attributes).forEach((attr) => {\n      if (attr.name.startsWith('data-ctx-')) {\n        const key = attr.name.replace('data-ctx-', '').replace(/-([a-z])/g, (_, c) => c.toUpperCase());\n        ctx[key] = attr.value;\n      }\n    });\n    return ctx;\n  }\n\n  function findElements(container) {\n    const s = config.selectors;\n    return {\n      form: container.querySelector(s.form),\n      input: container.querySelector(s.input),\n      submit: container.querySelector(s.submit),\n      messages: container.querySelector(s.messages),\n      typingIndicator: container.querySelector(s.typingIndicator),\n      openBtn: container.querySelector(s.openBtn),\n      closeBtn: container.querySelector(s.closeBtn),\n    };\n  }\n\n  function renderSkeleton(container) {\n    // Only render if missing expected structure (progressive enhancement)\n    if (!container.querySelector(config.selectors.messages)) {\n      const messages = createEl('div', { class: 'aura-messages', 'data-aura-messages': true, 'aria-live': 'polite', role: 'log' });\n      container.appendChild(messages);\n    }\n    if (!container.querySelector(config.selectors.form)) {\n      const form = createEl('form', { class: 'aura-form', 'data-aura-form': true });\n      const input = createEl('textarea', { class: 'aura-input', 'data-aura-input': true, placeholder: config.i18n.placeholder });\n      const submit = createEl('button', { type: 'submit', class: 'aura-submit', 'data-aura-submit': true }, config.i18n.sending);\n      form.appendChild(input);\n      form.appendChild(submit);\n      container.appendChild(form);\n    }\n    if (!container.querySelector(config.selectors.typingIndicator)) {\n      const tip = createEl('div', { class: 'aura-typing', 'data-aura-typing': true, 'aria-hidden': 'true' }, '');\n      container.appendChild(tip);\n    }\n  }\n\n  function init(containerSelectorOrEl, localConfig = {}) {\n    const container = typeof containerSelectorOrEl === 'string'\n      ? document.querySelector(containerSelectorOrEl)\n      : containerSelectorOrEl;\n\n    if (!container) {\n      throw new Error('AuraChatbot: container not found');\n    }\n\n    applyConfig(window.AURA_CHATBOT_CONFIG || {});\n    applyConfig(localConfig);\n\n    state.container = container;\n    renderSkeleton(container);\n    state.elements = findElements(container);\n\n    // Ensure messages container exists\n    if (!state.elements.messages) {\n      state.elements.messages = container.querySelector(config.selectors.messages) || container.appendChild(createEl('div', { class: 'aura-messages', 'data-aura-messages': true }));\n    }\n\n    // Set placeholder localized strings if provided\n    if (state.elements.input && config.i18n && config.i18n.placeholder) {\n      state.elements.input.placeholder = config.i18n.placeholder;\n    }\n\n    attachEvents();\n    return {\n      send: (text) => {\n        renderMessage(state.elements.messages, text, 'user');\n        return sendMessage({ prompt: text, context: getContext() })\n          .then((res) => {\n            if (res && res.reply) renderMessage(state.elements.messages, res.reply, 'bot');\n            return res;\n          });\n      },\n      container,\n      config,\n    };\n  }\n\n  // Backwards-compatible global attach for classic WP enqueue setups\n  function autoInit(selector = '[data-aura-chat]') {\n    document.querySelectorAll(selector).forEach((el) => {\n      try { init(el); } catch (e) { /* fail silently per-instance */ }\n    });\n  }\n\n  return {\n    init,\n    autoInit,\n  };\n}());\n\n// UMD-ish fallback so the bundled script works without module support.\n// If using bundlers, this will be replaced/removed by the bundle config.\nif (typeof window !== 'undefined') {\n  window.AuraChatbot = window.AuraChatbot || AuraChatbot;\n}\n\nexport default AuraChatbot;\n"],
  "mappings": "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",
  "names": ["aura_chatbot_exports", "__export", "aura_chatbot_default", "DEFAULT_OPTIONS", "createEl", "tag", "attrs", "text", "el", "k", "v", "timeoutFetch", "resource", "options", "ms", "controller", "id", "signal", "safeText", "s", "div", "AuraChatbot", "config", "state", "applyConfig", "local", "deepMerge", "a", "b", "out", "isObject", "x", "renderMessage", "container", "message", "type", "item", "body", "showTyping", "show", "sendMessage", "payload", "url", "headers", "res", "attachEvents", "form", "input", "submit", "messages", "typingIndicator", "openBtn", "closeBtn", "ev", "value", "userMsg", "response", "getContext", "err", "ctx", "attr", "key", "_", "c", "findElements", "renderSkeleton", "tip", "init", "containerSelectorOrEl", "localConfig", "autoInit", "selector"]
}
